name: Build, test, and push to main

on:
    push:
      branches:
        - staging
jobs:
    build-test-deploy:
        runs-on: ubuntu-latest

        steps:
        - name: Checkout code
          uses: actions/checkout@v2

            # Step 2: Set up Docker
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2

          # Step 2: Set up Node.js for React frontend
        - name: Set up Node.js
          uses: actions/setup-node@v2
          with:
            node-version: '18'

        # Step 3: Install frontend dependencies
        - name: Install frontend dependencies
          run: |
              cd frontend
              npm install

        # Step 4: Build the React frontend
        - name: Build React frontend
          run: |
              cd frontend
              npm run build

        # Step 5: Set up Python for FastAPI backend
        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: '3.9'

        # Step 6: Install backend dependencies
        - name: Install backend dependencies
          run: |
              cd Backend
              pip install -r requirements.txt

        # Step 7: Run backend FastAPI server (optional for testing integration)
        - name: Run FastAPI backend
          run: |
              cd Backend
              uvicorn app.main:app --reload 

        # Step 8: Run all tests (frontend and backend)
        - name: Run all tests
          run: |
              cd frontend
              npm run test 

        # Step 9: Set up Git
        - name: Set up Git for main push
          run: |
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
        
        # Step 10 : merge from staging to main
        - name: merge from staging to main
          uses: everlytic/branch-merge@1.1.2
          with:
              github_token: ${{ secrets.GA_TOKEN}}
              source_ref: 'staging' # Source branch is 'dev'
              target_branch: 'main' # Target branch is 'main'
              commit_message_template: '[Automated] Merged {source_ref} into target {target_branch}'
        
      
        